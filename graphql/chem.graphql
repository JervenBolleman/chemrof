type AcidAnionGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
    name: String
  }

type AcidBase
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
    elementalCharge: Integer
    hasAcidForm: BronstedAcid
  }

type AcidBaseConflationClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
    hasPhysiologicalBase: AcidBase
  }

type Allotrope
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    allotropicAnalogOf: ChemicalElement!
    hasBondingStructure: String!
  }

type AminoAcidSequenceInterval
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasSequenceRepresentation: AminoAcidSequenceString
  }

interface AnionState
  {
    elementalCharge: Integer
  }

interface Atom
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
  }

type AtomAnion implements AnionState
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    elementalChange: String
    hasElement: ChemicalElement
    elementalCharge: Integer
  }

type AtomCation implements CationState
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    elementalChange: String
    hasElement: ChemicalElement
    elementalCharge: Integer
  }

type AtomGroupingByPeriodicTableBlock
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Atom
    inPeriodicTableBlock: PeriodicTableBlock
  }

type AtomGroupingByPeriodicTableGroup
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Atom
    inPeriodicTableGroup: PeriodicTableGroup
  }

interface AtomGroupingByPeriodicTablePlacement
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Atom
  }

type AtomGroupingByProperty
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Atom
  }

type AtomGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Atom
  }

interface AtomIonicForm
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    elementalCharge: Integer
    elementalChange: String
  }

type AtomOccurrence implements OwlClass
  {
    owlSubclassOf: OwlClass
    occurrenceOf: Atom!
    valence: Integer
    oxidationNumber: Integer
    formalCharge: Integer
    coordinationNumber: Integer
  }

type AtomicBond implements OwlClass
  {
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    bondOrder: Integer
    bondType: BondTypeEnum
    bondLengthInAngstroms: Float
    bondAngle: Float
    torsionalAngle: Float
  }

type BronstedAcid
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    acidity: Float
    hardOrSoft: HardOrSoftEnum
    acidFormOf: [AcidBase]
  }

interface CationState
  {
    elementalCharge: Integer
  }

interface ChargeState
  {
    elementalCharge: Integer
  }

interface Charged
  {
    elementalCharge: Integer
  }

type ChemicalCharacteristic
  {
  }

type ChemicalElement
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    name: String
    hasPart: SubatomicParticle
    symbol: String
    inPeriodicTableGroup: PeriodicTableGroup
    inPeriodicTableBlock: PeriodicTableBlock
    boilingPointInCelcius: Float
    meltingPointInCelcius: Float
    standardAtomicWeight: Float
    electronConfiguration: String
    hasStereocenter: [Stereocenter]
  }

type ChemicalEntity implements OwlClass
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

interface ChemicalEntityOrGrouping
  {
  }

type ChemicalGroup
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

interface ChemicalMixture
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type ChemicalSalt
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    elementalCharge: Integer
    hasCationicComponent: CationState
    hasAnionicComponent: AnionState
  }

type ChemicalSaltByAnion
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    hasCationicComponent: String
    classifies: ChemicalSalt
    hasAnionicComponent: String
    name: String
  }

type ChemicalSaltByCation
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    hasAnionicComponent: String
    classifies: ChemicalSalt
    hasCationicComponent: String
    name: String
  }

type ChemicalSaltGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    hasAnionicComponent: String
    hasCationicComponent: String
    name: String
    classifies: ChemicalSalt
  }

type ChiralityCenter
  {
    owlSubclassOf: OwlClass
  }

interface Connectivity
  {
  }

type Copolymer
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasSubmolecules: [Molecule]
    polymerOf: Macromolecule
    hasPart: [Macromolecule]
  }

type DNASequenceInterval
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasSequenceRepresentation: DNASequenceString
  }

type Electron
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type Enantiomer
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    relativeConfiguration: String
    opticalConfiguration: String
    absoluteConfiguration: String
    enantiomerFormOf: Molecule
  }

type Ester
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    hasParentAlcohol: ChemicalEntity
    hasParentAcid: BronstedAcid
  }

type FullyCovalentlyBonded
  {
  }

type FullySpecifiedAtom
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    elementalCharge: Integer
    neutronNumber: Count
  }

type FunctionalGroup
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    isSubstitutentGroupFrom: Molecule
  }

type GeneralAcidBaseGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
  }

type GeneralizedMolecularStructureClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
  }

type Glycan
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    hasSubmolecules: [Molecule]
  }

type GroupingClass implements OwlClass
  {
    subtypeOf: [GroupingClass]
    classifies: ChemicalEntity
    owlSubclassOf: OwlClass
  }

interface GroupingClassForAcidsOrBases
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
  }

type ImpreciseChemicalMixture
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasProportionalParts: [ProportionalPart]
  }

interface InchiObject
  {
  }

interface InformationalChemicalEntity
  {
  }

type IsPart
  {
  }

interface IsPartOrWhole
  {
  }

type IsWhole
  {
  }

type IsomeraseReaction
  {
    leftParticipants: [ReactionParticipant]
    rightParticipants: [ReactionParticipant]
    direction: String
    smartsString: String
    isDiastereoselective: Boolean
    isStereo: Boolean
    isBalanced: Boolean
    isTransport: Boolean
    isFullyCharacterized: Boolean
    reactionCenter: String
    description: String
  }

type Isotope
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    hasElement: ChemicalElement
    neutronNumber: Count
    isotopeOf: Isotope
    halfLife: NumberOfYears
    decayProduct: Isotope
    decayMode: String
    decayEnergy: String
    modeOfFormation: String
  }

type Location implements OwlClass
  {
    owlSubclassOf: OwlClass
  }

type Macromolecule
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    hasSubmolecules: [Molecule]
  }

type Material
  {
    hasPart: ChemicalEntity
  }

type Measure
  {
    owlSubclassOf: OwlClass
  }

type Moiety
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type MolecularAnion implements AnionState
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
    elementalCharge: Integer
  }

type MolecularCation implements CationState
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
    elementalCharge: Integer
  }

type MolecularComplex
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type MolecularComponent
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type MolecularComponentGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MolecularComponentGroupingClass]
    classifies: MolecularComponent
  }

type MolecularDerivativeGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    derivativeOf: ChemicalEntity
    name: String
    classifies: Molecule
  }

type MolecularSpecies
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
  }

type MolecularSubsequence
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type Molecule implements FullyCovalentlyBonded
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
  }

type MoleculeGroupingClass
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
  }

type MoleculeGroupingClassDefinedByAdditionOfAGroup
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
    hasGroup: [ChemicalGroup]
    derivativeOf: PolyatomicEntity
  }

type MoleculeGroupingClassDefinedByComponents
  {
    owlSubclassOf: OwlClass
    subtypeOf: [MoleculeGroupingClass]
    classifies: Molecule
    hasPart: ChemicalEntityOrGrouping
  }

type MoleculePairwiseSimilarity
  {
    owlSubclassOf: OwlClass
    leftMolecule: Molecule
    rightMolecule: Molecule
    score: String
  }

type MonoatomicIon implements Charged
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    elementalCharge: Integer
    elementalChange: String
    hasElement: ChemicalElement
  }

type Monomer
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type MonomolecularPolymer
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    hasSubmolecules: [Molecule]
    polymerOf: Macromolecule
  }

type Nanostructure
  {
    hasPart: ChemicalEntity
    hasMorphologicalCategory: NanostructureMorphologyEnum
  }

type NaturalProduct
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
  }

type Neutron
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type NonSpeciesMolecule
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
  }

type Nucleon
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type NucleotideSequenceInterval
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasSequenceRepresentation: DNASequenceString
  }

type Nuclide
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    energyLevel: String
  }

interface OwlClass
  {
    owlSubclassOf: OwlClass
  }

type Peptide
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    hasSubmolecules: [Molecule]
  }

type PeriodicTableBlock
  {
    type: PeriodicTableBlockEnum
  }

interface PeriodicTablePlacement
  {
  }

interface PolyatomicEntity
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type PolyatomicIon implements Charged
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    conjugateBaseOf: ChemicalEntity
    conjugateAcidOf: ChemicalEntity
    elementalCharge: Integer
  }

type PolymerPart
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type PreciseChemicalMixture implements WeaklyBonded
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type ProportionalPart
  {
    owlSubclassOf: OwlClass
    hasRole: IngredientRoleEnum
    composedOf: ChemicalEntity
    minimalPercentage: Float
    maximumPercentage: Float
  }

type Protein
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    hasSubmolecules: [Molecule]
  }

type Proton
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type RacemicMixture
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasLeftEnantiomer: Enantiomer!
    hasRightEnantiomer: Enantiomer!
  }

type Radionuclide
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    energyLevel: String
  }

type Reaction
  {
    leftParticipants: [ReactionParticipant]
    rightParticipants: [ReactionParticipant]
    direction: String
    smartsString: String
    isDiastereoselective: Boolean
    isStereo: Boolean
    isBalanced: Boolean
    isTransport: Boolean
    isFullyCharacterized: Boolean
    reactionCenter: String
    description: String
  }

type ReactionParticipant
  {
    owlSubclassOf: OwlClass
    participant: ChemicalEntity
    stoichiometry: Integer
  }

type RelationalChemicalEntity implements OwlClass
  {
    owlSubclassOf: OwlClass
  }

type RNASequenceInterval
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasSequenceRepresentation: DNASequenceString
  }

interface SequenceInterval
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasSequenceRepresentation: SequenceString
  }

type SmallMolecule
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
  }

type StandardInchiObject
  {
    inchiVersionString: String!
    inchiChemicalSublayer: String!
    inchiAtomConnectionsSublayer: String
    inchiHydrogenConnectionsSublayer: String
    inchiChargeSublayer: String
    inchiProtonSublayer: String
    inchiStereochemicalDoubleBondSublayer: String
    inchiTetrahedralStereochemicalSublayer: String
    inchiStereochemicalTypeSublayer: String
    inchiIsotopicLayer: String
  }

interface State
  {
  }

type Stereocenter implements OwlClass
  {
    owlSubclassOf: OwlClass
  }

type Stereoisomer
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
  }

type SubatomicParticle
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type SupramolecularPolymer
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
  }

type TanimotoSimilarity
  {
    owlSubclassOf: OwlClass
    leftMolecule: Molecule
    rightMolecule: Molecule
    score: Float
  }

interface Uncharged
  {
    elementalCharge: Integer
  }

type UnchargedAtom implements Uncharged
  {
    id: String!
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    atomicNumber: Count
    symbol: String
    name: String
    hasPart: SubatomicParticle
    elementalCharge: Integer
    elementalChange: String
  }

type UnchargedMolecule implements Uncharged
  {
    id: String!
    name: String
    isRadical: Boolean
    hasStandardInchiObject: StandardInchiObject
    hasCharacteristic: ChemicalCharacteristic
    owlSubclassOf: OwlClass
    hasAtomOccurrences: [AtomOccurrence]
    hasBonds: [AtomicBond]
    hasSubmolecules: [Molecule]
    hasAtoms: [Atom]
    isOrganic: Boolean
    hasPart: String
    elementalCharge: Integer
  }

type WeaklyBonded
  {
  }


