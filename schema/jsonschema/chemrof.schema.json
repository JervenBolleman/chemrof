{
   "$defs": {
      "AcidAnionGroupingClass": {
         "additionalProperties": false,
         "description": "A molecule grouping class that groups the different ion forms of the base of an acid",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "pattern": "ate$",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AcidAnionGroupingClass",
         "type": "object"
      },
      "AcidBase": {
         "additionalProperties": false,
         "description": "A conugate base of an acid with charge specified. Example: citrate(3-)",
         "properties": {
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_acid_form": {
               "description": "connects a base to the acid form. E.g. citrate(3-) has acid form citric acid",
               "type": "string"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "AcidBase",
         "type": "object"
      },
      "AcidBaseConflationClass": {
         "additionalProperties": false,
         "description": "A molecule grouping class that can groups an acid together with all its conjugate bases. physiological",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "has_physiological_base": {
               "description": "The base which defs this conflation class",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AcidBaseConflationClass",
         "type": "object"
      },
      "Allotrope": {
         "additionalProperties": false,
         "description": "A molecule consisting of atoms of the same element",
         "properties": {
            "allotropic_analog_of": {
               "description": "relationship that holds between two allotropes, where both allotropes are allotropes of the same element",
               "type": "string"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonding_structure": {
               "description": "The pattern in which the atoms are bonded; e.g. hexagonal lattice, sheets, etc",
               "type": "string"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id",
            "allotropic_analog_of",
            "has_bonding_structure"
         ],
         "title": "Allotrope",
         "type": "object"
      },
      "AminoAcidSequenceInterval": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_sequence_representation": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "AminoAcidSequenceInterval",
         "type": "object"
      },
      "AtomAnion": {
         "additionalProperties": false,
         "description": "A monoatomic ion that is negative",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "maximum": -1,
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_element": {
               "type": "string"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "AtomAnion",
         "type": "object"
      },
      "AtomCation": {
         "additionalProperties": false,
         "description": "A monoatomic ion that is positive, e.g Cu(2+)",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "minimum": 1,
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_element": {
               "type": "string"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "AtomCation",
         "type": "object"
      },
      "AtomGroupingByPeriodicTableBlock": {
         "additionalProperties": false,
         "description": "Example: group 13 atom",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "in_periodic_table_block": {
               "$ref": "#/$defs/PeriodicTableBlock"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "A subtype_of relationship holds between C and P if C is a more specialized form of P. Here C and P denotes instances of OWL classes, where C and P both function as grouping class",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AtomGroupingByPeriodicTableBlock",
         "type": "object"
      },
      "AtomGroupingByPeriodicTableGroup": {
         "additionalProperties": false,
         "description": "Example: p-block atom",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "in_periodic_table_group": {
               "type": "integer"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "A subtype_of relationship holds between C and P if C is a more specialized form of P. Here C and P denotes instances of OWL classes, where C and P both function as grouping class",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AtomGroupingByPeriodicTableGroup",
         "type": "object"
      },
      "AtomGroupingByProperty": {
         "additionalProperties": false,
         "description": "Example: metal atom",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "A subtype_of relationship holds between C and P if C is a more specialized form of P. Here C and P denotes instances of OWL classes, where C and P both function as grouping class",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AtomGroupingByProperty",
         "type": "object"
      },
      "AtomGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class that classifies atoms. For example, metal atom",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "A subtype_of relationship holds between C and P if C is a more specialized form of P. Here C and P denotes instances of OWL classes, where C and P both function as grouping class",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AtomGroupingClass",
         "type": "object"
      },
      "AtomOccurrence": {
         "additionalProperties": false,
         "description": "An occurrence of an atom in the context of a particular molecule. For example, one of two occurrences of oxygen in nitrate",
         "properties": {
            "coordination_number": {
               "description": "The number of atoms bonded to the atom of interest. [https://doi.org/10.1021%2Fed083p791]",
               "type": "integer"
            },
            "formal_charge": {
               "description": "The charge remaining on an atom when all ligands are removed homolytically. [https://doi.org/10.1021%2Fed083p791]",
               "type": "integer"
            },
            "occurrence_of": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "oxidation_number": {
               "description": "The charge remaining on an atom when all ligands are removed heterolytically in their closed form, with the electrons being transferred to the more electronegative partner; homonuclear bonds do not contribute to the oxidation number. [https://doi.org/10.1021%2Fed083p791]",
               "type": "integer"
            },
            "valence": {
               "description": "the number of electrons that an atom uses in bonding [https://doi.org/10.1021%2Fed083p791]",
               "type": "integer"
            }
         },
         "required": [
            "occurrence_of"
         ],
         "title": "AtomOccurrence",
         "type": "object"
      },
      "AtomicBond": {
         "additionalProperties": false,
         "description": "A connection between two atoms. Note this is the reified form of 'atomically connected to'.",
         "properties": {
            "bond_angle": {
               "type": "number"
            },
            "bond_length_in_angstroms": {
               "description": "the average distance between nuclei of two bonded atoms in a molecule. It is a transferable property of a bond between atoms of fixed types, relatively independent of the rest of the molecule.",
               "type": "number"
            },
            "bond_order": {
               "description": "the number of electron pairs (bonds) between a pair of atoms",
               "type": "integer"
            },
            "bond_type": {
               "$ref": "#/$defs/BondTypeEnum"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "torsional_angle": {
               "type": "number"
            }
         },
         "required": [],
         "title": "AtomicBond",
         "type": "object"
      },
      "BondTypeEnum": {
         "description": "",
         "enum": [
            "covalent",
            "aromatic",
            "single",
            "double",
            "triple",
            "quadruple",
            "hydrogen",
            "ionic",
            "polycentric",
            "metal-metal",
            "salt bridge"
         ],
         "title": "BondTypeEnum",
         "type": "string"
      },
      "BronstedAcid": {
         "additionalProperties": false,
         "description": "A molecule capable of donating a hydron to an acceptor. Example: citric acid",
         "properties": {
            "acid_form_of": {
               "description": "connects an acid to any of the the base anions. E.g. citric acid acid form of citrate(1-),citrate(2-),citrate(3-)",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "acidity": {
               "type": "number"
            },
            "hard_or_soft": {
               "$ref": "#/$defs/HardOrSoftEnum"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "BronstedAcid",
         "type": "object"
      },
      "ChemicalElement": {
         "additionalProperties": false,
         "description": "generic form of an atom, with unspecified neutron or charge",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "boiling_point_in_celcius": {
               "type": "number"
            },
            "electron_configuration": {
               "type": "string"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "has_physiologically_stable_form": {
               "description": "connects an element to the equivalent form that is physiologically stable at pH 7.3",
               "type": "string"
            },
            "has_stereocenter": {
               "items": {
                  "$ref": "#/$defs/Stereocenter"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "in_periodic_table_block": {
               "$ref": "#/$defs/PeriodicTableBlock",
               "description": "block of periodic table unified by the orbitals their valence electrons or vacancies lie in"
            },
            "in_periodic_table_group": {
               "description": "which number in periodic table column",
               "type": "integer"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "mass": {
               "type": "number"
            },
            "melting_point_in_celcius": {
               "type": "number"
            },
            "monoisotopic_mass": {
               "type": "number"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "standard_atomic_weight": {
               "type": "number"
            },
            "symbol": {
               "description": "E.g. O, K, Ge",
               "pattern": "^[A-Z][a-z]*",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalElement",
         "type": "object"
      },
      "ChemicalGroup": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalGroup",
         "type": "object"
      },
      "ChemicalGroupingByCharge": {
         "additionalProperties": false,
         "description": "A grouping class that refines a charge-neutral entity",
         "properties": {
            "charge_agnostic_entity": {
               "type": "string"
            },
            "classifies": {
               "type": "string"
            },
            "has_charge_state": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalGroupingByCharge",
         "type": "object"
      },
      "ChemicalRole": {
         "additionalProperties": false,
         "description": "A characteristic of a chemical entity that is realized under particular conditions",
         "properties": {
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [],
         "title": "ChemicalRole",
         "type": "object"
      },
      "ChemicalSalt": {
         "additionalProperties": false,
         "description": "a chemical compound consisting of an ionic assembly of cations and anions.",
         "properties": {
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "maximum": 0,
               "minimum": 0,
               "type": "integer"
            },
            "has_anionic_component": {
               "$ref": "#/$defs/AnionState"
            },
            "has_cationic_component": {
               "$ref": "#/$defs/CationState"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalSalt",
         "type": "object"
      },
      "ChemicalSaltByAnion": {
         "additionalProperties": false,
         "description": "A grouping class for a chemical salt named by anion",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "has_anionic_component": {
               "type": "string"
            },
            "has_cationic_component": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalSaltByAnion",
         "type": "object"
      },
      "ChemicalSaltByCation": {
         "additionalProperties": false,
         "description": "A grouping class for a chemical salt named by cation",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "has_anionic_component": {
               "type": "string"
            },
            "has_cationic_component": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalSaltByCation",
         "type": "object"
      },
      "ChemicalSaltGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class for a chemical salt",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "has_anionic_component": {
               "type": "string"
            },
            "has_cationic_component": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalSaltGroupingClass",
         "type": "object"
      },
      "ChiralityCenter": {
         "additionalProperties": false,
         "description": "a stereocenter consisting of an atom holding a set of ligands (atoms or groups of atoms) in a spatial arrangement which is not superimposable on its mirror image.",
         "properties": {
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [],
         "title": "ChiralityCenter",
         "type": "object"
      },
      "Copolymer": {
         "additionalProperties": false,
         "description": "a polymer with a more than one type of repeating unit",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_repeat_unit": {
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_branched": {
               "type": "boolean"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "polymer_architecture_type": {
               "description": "morphological structure of a polymer",
               "type": "string"
            },
            "polymer_of": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Copolymer",
         "type": "object"
      },
      "DNASequenceInterval": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_sequence_representation": {
               "description": "By convention the sequence string is always the DNA sequence. For RNA intervals, this is the cDNA sequence",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "DNASequenceInterval",
         "type": "object"
      },
      "Electron": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Electron",
         "type": "object"
      },
      "ElementFamilyEnum": {
         "description": "",
         "enum": [
            "Alkali_Earth",
            "Alkaline_Earth",
            "Halogen",
            "Metalloids",
            "Noblegas",
            "Non-Metal",
            "Other_Metal",
            "Rare_Earth",
            "Transition"
         ],
         "title": "ElementFamilyEnum",
         "type": "string"
      },
      "ElementMetallicClassification": {
         "description": "",
         "enum": [
            "Metallic",
            "Non-Metallic",
            "Semi-Metallic"
         ],
         "title": "ElementMetallicClassification",
         "type": "string"
      },
      "Enantiomer": {
         "additionalProperties": false,
         "description": "one of two stereoisomers of a chiral molecule that are mirror images. Example: R-thalidomide",
         "properties": {
            "absolute_configuration": {
               "type": "string"
            },
            "enantiomer_form_of": {
               "description": "Example:  R-thalidomide is the enantiomer form of 2-(2,6-dioxopiperidin-3-yl)-1H-isoindole-1,3(2H)-dione",
               "type": "string"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "optical_configuration": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "relative_configuration": {
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Enantiomer",
         "type": "object"
      },
      "Ester": {
         "additionalProperties": false,
         "description": "An ester is a chemical compound derived from an acid (organic or inorganic) in which at least one \u2013OH hydroxyl group is replaced by an \u2013O\u2013 alkyl (alkoxy) group",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_parent_acid": {
               "type": "string"
            },
            "has_parent_alcohol": {
               "type": "string"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Ester",
         "type": "object"
      },
      "FullyCovalentlyBonded": {
         "additionalProperties": false,
         "description": "All pairs of atoms in this entity are transitively connected via covalent bonds",
         "properties": {},
         "required": [],
         "title": "FullyCovalentlyBonded",
         "type": "object"
      },
      "FullySpecifiedAtom": {
         "additionalProperties": false,
         "description": "An atom type that has atomic number, charge, and neutron number stated (equivalently: protons + mass + charge)",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "neutron_number": {
               "description": "number of neutrons in an atom",
               "type": "integer"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "FullySpecifiedAtom",
         "type": "object"
      },
      "FunctionalGroup": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "is_substitutent_group_from": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "FunctionalGroup",
         "type": "object"
      },
      "GeneralAcidBaseGroupingClass": {
         "additionalProperties": false,
         "description": "A molecule grouping class that can groups an acid together with all its conjugate bases. physiological",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "GeneralAcidBaseGroupingClass",
         "type": "object"
      },
      "GeneralizedMolecularStructureClass": {
         "additionalProperties": false,
         "description": "A molecule grouping class that can be written using a chemical formula using variables (e.g. n), or arithmetic expressions uing variables (e.g. 2n+2), plus optionally constraints on those variables (e.g. n>3). An example is alkane; CnH2n+2, which groups specific molecules such as methane",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "GeneralizedMolecularStructureClass",
         "type": "object"
      },
      "Glycan": {
         "additionalProperties": false,
         "description": "A macromolecule consisting of a large number of monosaccharides linked glycosidically",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Glycan",
         "type": "object"
      },
      "HardOrSoftEnum": {
         "description": "",
         "enum": [
            "hard",
            "soft",
            "borderline"
         ],
         "title": "HardOrSoftEnum",
         "type": "string"
      },
      "Homopolymer": {
         "additionalProperties": false,
         "description": "a polymer with a single type of repeating unit",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_repeat_unit": {
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_branched": {
               "type": "boolean"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "polymer_architecture_type": {
               "description": "morphological structure of a polymer",
               "type": "string"
            },
            "polymer_of": {
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Homopolymer",
         "type": "object"
      },
      "ImpreciseChemicalMixture": {
         "additionalProperties": false,
         "description": "A macroscopic polyatomic entity that consists of multiple chemical entities where the stoichiometry is not specified and the spatial arrangement of the ingredients is not defined. Examples include coal, tea tree oil, toothpaste, organometallic compounds, heterogeneous metals",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_minchi_representation": {
               "description": "Proposed new Mixtures InChI",
               "type": "string"
            },
            "has_mixfile_location": {
               "description": "Location of a MixFile representing a chemical mixture",
               "type": "string"
            },
            "has_proportional_parts": {
               "description": "Relationship between a complex mixture and its parts",
               "items": {
                  "$ref": "#/$defs/ProportionalPart"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "ImpreciseChemicalMixture",
         "type": "object"
      },
      "IngredientRoleEnum": {
         "description": "",
         "enum": [
            "active ingredient",
            "inactive ingredient",
            "excipient",
            "solvent"
         ],
         "title": "IngredientRoleEnum",
         "type": "string"
      },
      "IsPart": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "IsPart",
         "type": "object"
      },
      "IsWhole": {
         "additionalProperties": false,
         "description": "",
         "properties": {},
         "required": [],
         "title": "IsWhole",
         "type": "object"
      },
      "Isobar": {
         "additionalProperties": false,
         "description": "Isobars are atoms (nuclides) of different chemical elements that have the same number of nucleons.",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "decay_energy": {
               "type": "string"
            },
            "decay_mode": {
               "type": "string"
            },
            "decay_product": {
               "type": "string"
            },
            "energy_level": {
               "description": "e.g. ground, stable",
               "type": "string"
            },
            "half_life": {
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_element": {
               "type": "string"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "isobar_of": {
               "description": "equal mass number (Z1 + N1 = Z2 + N2)",
               "type": "string"
            },
            "mode_of_formation": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "nucleon_number": {
               "description": "number of nucleons in an atom. proton number plus neutron number.",
               "type": "integer"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Isobar",
         "type": "object"
      },
      "IsomeraseReaction": {
         "additionalProperties": false,
         "description": "A reaction that converts a molecule from one isomer to another.",
         "properties": {
            "description": {
               "type": "string"
            },
            "direction": {
               "description": "One of l->r, r->l, bidirectional, neutral",
               "type": "string"
            },
            "has_reaction_smiles_representation": {
               "type": "string"
            },
            "has_rinchi_representation": {
               "description": "Proposed Reactions InChI",
               "type": "string"
            },
            "is_balanced": {
               "type": "boolean"
            },
            "is_diastereoselective": {
               "type": "boolean"
            },
            "is_fully_characterized": {
               "description": "False if includes R-groups",
               "type": "boolean"
            },
            "is_stereo": {
               "type": "boolean"
            },
            "is_transport": {
               "type": "boolean"
            },
            "left_participants": {
               "items": {
                  "$ref": "#/$defs/ReactionParticipant"
               },
               "type": "array"
            },
            "reaction_center": {
               "type": "string"
            },
            "right_participants": {
               "items": {
                  "$ref": "#/$defs/ReactionParticipant"
               },
               "type": "array"
            },
            "smarts_string": {
               "type": "string"
            }
         },
         "required": [
            "has_rinchi_representation"
         ],
         "title": "IsomeraseReaction",
         "type": "object"
      },
      "Isotope": {
         "additionalProperties": false,
         "description": "A specific subtype of an atom with a specified neutron number",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "decay_energy": {
               "type": "string"
            },
            "decay_mode": {
               "type": "string"
            },
            "decay_product": {
               "type": "string"
            },
            "energy_level": {
               "description": "e.g. ground, stable",
               "type": "string"
            },
            "half_life": {
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_element": {
               "type": "string"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "isotope_of": {
               "description": "relationship that holds between two isotopes, always holds if the isotopes have the same atomic number and a different neutron number.",
               "type": "string"
            },
            "mode_of_formation": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "neutron_number": {
               "description": "number of neutrons in an atom",
               "type": "integer"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Isotope",
         "type": "object"
      },
      "Lipid": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Lipid",
         "type": "object"
      },
      "Location": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [],
         "title": "Location",
         "type": "object"
      },
      "Macromolecule": {
         "additionalProperties": false,
         "description": "A large molecule, such as a polymer, lipid, or macrocycle",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Macromolecule",
         "type": "object"
      },
      "Material": {
         "additionalProperties": false,
         "description": "A substance composed of one or more chemical entities",
         "properties": {
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            }
         },
         "required": [],
         "title": "Material",
         "type": "object"
      },
      "MaterialGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class that classifies materials",
         "properties": {
            "classifies": {
               "$ref": "#/$defs/Material"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "A subtype_of relationship holds between C and P if C is a more specialized form of P. Here C and P denotes instances of OWL classes, where C and P both function as grouping class",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MaterialGroupingClass",
         "type": "object"
      },
      "Mineral": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            }
         },
         "required": [],
         "title": "Mineral",
         "type": "object"
      },
      "Moiety": {
         "additionalProperties": false,
         "description": "a named part of a molecule. In some instances moieties may be composed of yet smaller moieties and functional groups",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Moiety",
         "type": "object"
      },
      "MolecularAnion": {
         "additionalProperties": false,
         "description": "A polyatomic ion that is negative",
         "properties": {
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularAnion",
         "type": "object"
      },
      "MolecularCation": {
         "additionalProperties": false,
         "description": "A polyatomic ion that is positive",
         "properties": {
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularCation",
         "type": "object"
      },
      "MolecularComplex": {
         "additionalProperties": false,
         "description": "A molecular complex is a chemical complex composed of at least one weakly interacting molecule.[SIO] Examples: chromosome, double-standed DNA, protein-containing macromolecular complex",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularComplex",
         "type": "object"
      },
      "MolecularComponent": {
         "additionalProperties": false,
         "description": "A proper part of a molecule that is larger than an atom",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularComponent",
         "type": "object"
      },
      "MolecularComponentGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class that classifies molecular components. Example: inorganic anion group",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "A subtype_of relationship holds between C and P if C is a more specialized form of P. Here C and P denotes instances of OWL classes, where C and P both function as grouping class",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularComponentGroupingClass",
         "type": "object"
      },
      "MolecularDerivativeGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class defined as a derivative of another molecule or molecular grouping class",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "derivative_of": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularDerivativeGroupingClass",
         "type": "object"
      },
      "MolecularSpecies": {
         "additionalProperties": false,
         "description": "A molecule in which the units are identical. Example: methyl",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularSpecies",
         "type": "object"
      },
      "MolecularSubsequence": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "MolecularSubsequence",
         "type": "object"
      },
      "MoleculeGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class that classifies molecules. Example: carbohydrate, monosaccharide, amino acid, polyacrylamide",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MoleculeGroupingClass",
         "type": "object"
      },
      "MoleculeGroupingClassDefinedByAdditionOfAGroup": {
         "additionalProperties": false,
         "description": "A grouping class defined in terms of a derivative of a molecule and the addition of a group",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "derivative_of": {
               "type": "string"
            },
            "has_group": {
               "description": "Relation between a molecule and the groups it contains",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MoleculeGroupingClassDefinedByAdditionOfAGroup",
         "type": "object"
      },
      "MoleculeGroupingClassDefinedByComponents": {
         "additionalProperties": false,
         "description": "A grouping class defined as an exhaustive list of components",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "has_part": {
               "$ref": "#/$defs/ChemicalEntityOrGrouping",
               "description": "basic parthood relations"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MoleculeGroupingClassDefinedByComponents",
         "type": "object"
      },
      "MoleculePairwiseSimilarity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "left_molecule": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "right_molecule": {
               "type": "string"
            },
            "score": {
               "type": "string"
            }
         },
         "required": [],
         "title": "MoleculePairwiseSimilarity",
         "type": "object"
      },
      "MonoatomicIon": {
         "additionalProperties": false,
         "description": "An atom type that has a charge",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_element": {
               "type": "string"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "MonoatomicIon",
         "type": "object"
      },
      "Monomer": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Monomer",
         "type": "object"
      },
      "MonomericPolymericGroupingClass": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "classifies": {
               "type": "string"
            },
            "has_repeat_unit": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "subtype_of": {
               "description": "grouping classes can be arranged in hierarchies arbitrarily deep. Note that subtype_of should only connect two grouping classes",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "MonomericPolymericGroupingClass",
         "type": "object"
      },
      "MonomolecularPolymer": {
         "additionalProperties": false,
         "description": "A macromolecule composed of repeating subunits. Examples: cellulose",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_repeat_unit": {
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_branched": {
               "type": "boolean"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "polymer_architecture_type": {
               "description": "morphological structure of a polymer",
               "type": "string"
            },
            "polymer_of": {
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "MonomolecularPolymer",
         "type": "object"
      },
      "Nanostructure": {
         "additionalProperties": false,
         "description": "A nanostructure is a structure of intermediate size between microscopic and molecular structures. Nanostructural detail is microstructure at nanoscale.",
         "properties": {
            "has_morphological_category": {
               "$ref": "#/$defs/NanostructureMorphologyEnum",
               "description": "e.g. rod, sheet"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            }
         },
         "required": [],
         "title": "Nanostructure",
         "type": "object"
      },
      "NanostructureMorphologyEnum": {
         "description": "",
         "enum": [
            "nanotube",
            "nanoparticle",
            "nanorod",
            "nanotubosome",
            "quantum dot",
            "nanofibre",
            "nanocrystal",
            "nanoribbon",
            "nanosheet",
            "nanowire"
         ],
         "title": "NanostructureMorphologyEnum",
         "type": "string"
      },
      "NaturalProduct": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "NaturalProduct",
         "type": "object"
      },
      "Neutron": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Neutron",
         "type": "object"
      },
      "NonSpeciesMolecule": {
         "additionalProperties": false,
         "description": "A molecule in which the units are not identical. TODO: move this higher",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "NonSpeciesMolecule",
         "type": "object"
      },
      "Nucleon": {
         "additionalProperties": false,
         "description": "A neutron or proton",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Nucleon",
         "type": "object"
      },
      "NucleotideSequenceInterval": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_sequence_representation": {
               "description": "By convention the sequence string is always the DNA sequence. For RNA intervals, this is the cDNA sequence",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "NucleotideSequenceInterval",
         "type": "object"
      },
      "Nuclide": {
         "additionalProperties": false,
         "description": "an atomic species characterized by the specific constitution of its nucleus",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "energy_level": {
               "description": "e.g. ground, stable",
               "type": "string"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Nuclide",
         "type": "object"
      },
      "Peptide": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Peptide",
         "type": "object"
      },
      "PeriodicTableBlock": {
         "additionalProperties": false,
         "description": "A block of the periodic table is a set of elements unified by the orbitals their valence electrons or vacancies lie in",
         "properties": {
            "type": {
               "$ref": "#/$defs/PeriodicTableBlockEnum"
            }
         },
         "required": [],
         "title": "PeriodicTableBlock",
         "type": "object"
      },
      "PeriodicTableBlockEnum": {
         "description": "",
         "enum": [
            "s-block",
            "p-block",
            "d-block",
            "f-block",
            "g-block"
         ],
         "title": "PeriodicTableBlockEnum",
         "type": "string"
      },
      "PolyatomicIon": {
         "additionalProperties": false,
         "description": "A molecule that has a charge. For example, nitrate is a molecular and ionic species; its formula is (NO3-).",
         "properties": {
            "conjugate_acid_of": {
               "type": "string"
            },
            "conjugate_base_of": {
               "description": "connects the base form of an acid to an acid. Also connects the different charge states of the base. Example: the different charge states of lactate (CHEBI:24996) conjugate base of lactic acid (CHEBI:28358)",
               "type": "string"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "PolyatomicIon",
         "type": "object"
      },
      "PolymerPart": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "PolymerPart",
         "type": "object"
      },
      "PolymerRepeatUnit": {
         "additionalProperties": false,
         "description": "An abstract part of a polymer that is all instances of a repeated monomer of a single type",
         "properties": {
            "degree_of_polymerization": {
               "type": "integer"
            },
            "mass": {
               "description": "the mass of a polymer repeat unit is the product of the mass of the repeated element multiplied by the degree",
               "type": "number"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "repetition_of": {
               "description": "the macromolecule that is repeated",
               "type": "string"
            }
         },
         "required": [],
         "title": "PolymerRepeatUnit",
         "type": "object"
      },
      "ProportionalPart": {
         "additionalProperties": false,
         "description": "A part of a complex mixture that is of uniform composition",
         "properties": {
            "composed_of": {
               "type": "string"
            },
            "has_role": {
               "$ref": "#/$defs/IngredientRoleEnum"
            },
            "maximum_percentage": {
               "type": "number"
            },
            "minimal_percentage": {
               "type": "number"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [],
         "title": "ProportionalPart",
         "type": "object"
      },
      "Protein": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Protein",
         "type": "object"
      },
      "Proton": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Proton",
         "type": "object"
      },
      "RNASequenceInterval": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_sequence_representation": {
               "description": "By convention the sequence string is always the DNA sequence. For RNA intervals, this is the cDNA sequence",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "RNASequenceInterval",
         "type": "object"
      },
      "RacemicMixture": {
         "additionalProperties": false,
         "description": "a chemical compound that has equal amounts of left- and right-handed enantiomers of a chiral molecule. An example is Thalidomide",
         "properties": {
            "chirality_agnostic_form": {
               "type": "string"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_left_enantiomer": {
               "type": "string"
            },
            "has_right_enantiomer": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id",
            "has_left_enantiomer",
            "has_right_enantiomer"
         ],
         "title": "RacemicMixture",
         "type": "object"
      },
      "Radionuclide": {
         "additionalProperties": false,
         "description": "an atom that has excess nuclear energy, making it unstable",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "energy_level": {
               "description": "e.g. ground, stable",
               "type": "string"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Radionuclide",
         "type": "object"
      },
      "Reaction": {
         "additionalProperties": false,
         "description": "reaction",
         "properties": {
            "description": {
               "type": "string"
            },
            "direction": {
               "description": "One of l->r, r->l, bidirectional, neutral",
               "type": "string"
            },
            "has_reaction_smiles_representation": {
               "type": "string"
            },
            "has_rinchi_representation": {
               "description": "Proposed Reactions InChI",
               "type": "string"
            },
            "is_balanced": {
               "type": "boolean"
            },
            "is_diastereoselective": {
               "type": "boolean"
            },
            "is_fully_characterized": {
               "description": "False if includes R-groups",
               "type": "boolean"
            },
            "is_stereo": {
               "type": "boolean"
            },
            "is_transport": {
               "type": "boolean"
            },
            "left_participants": {
               "items": {
                  "$ref": "#/$defs/ReactionParticipant"
               },
               "type": "array"
            },
            "reaction_center": {
               "type": "string"
            },
            "right_participants": {
               "items": {
                  "$ref": "#/$defs/ReactionParticipant"
               },
               "type": "array"
            },
            "smarts_string": {
               "type": "string"
            }
         },
         "required": [
            "has_rinchi_representation"
         ],
         "title": "Reaction",
         "type": "object"
      },
      "ReactionGroupingClass": {
         "additionalProperties": false,
         "description": "A grouping class for reactions, for example, dehalogenase; breaking of covalent bond",
         "properties": {
            "classifies": {
               "type": "string"
            }
         },
         "required": [],
         "title": "ReactionGroupingClass",
         "type": "object"
      },
      "ReactionParticipant": {
         "additionalProperties": false,
         "description": "Instances of this link a reaction to a chemical entity participant",
         "properties": {
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "participant": {
               "type": "string"
            },
            "stoichiometry": {
               "type": "integer"
            }
         },
         "required": [],
         "title": "ReactionParticipant",
         "type": "object"
      },
      "Similarity": {
         "additionalProperties": false,
         "description": "A relationship between two or more entities that is quantified based on their similarity",
         "properties": {
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [],
         "title": "Similarity",
         "type": "object"
      },
      "SmallMolecule": {
         "additionalProperties": false,
         "description": "A molecule characterized by availability in small-molecule databases",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "SmallMolecule",
         "type": "object"
      },
      "StandardInchiObject": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_charge_sublayer": {
               "pattern": "^q.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_hydrogen_connections_sublayer": {
               "description": "Describes how many hydrogen atoms are connected to each of the other atoms.",
               "pattern": "^h.*",
               "type": "string"
            },
            "inchi_isotopic_layer": {
               "pattern": "^[ih].*",
               "type": "string"
            },
            "inchi_proton_sublayer": {
               "pattern": "^p[\\-]\\d+",
               "type": "string"
            },
            "inchi_stereochemical_double_bond_sublayer": {
               "pattern": "^b.*",
               "type": "string"
            },
            "inchi_stereochemical_type_sublayer": {
               "pattern": "^s.*",
               "type": "string"
            },
            "inchi_tetrahedral_stereochemical_sublayer": {
               "pattern": "^[tm].*",
               "type": "string"
            },
            "inchi_version_string": {
               "pattern": "^1S$",
               "type": "string"
            }
         },
         "required": [
            "inchi_version_string"
         ],
         "title": "StandardInchiObject",
         "type": "object"
      },
      "Stereocenter": {
         "additionalProperties": false,
         "description": "a particular instance of a stereogenic element that is geometrically a point, bearing different substituents, such that interchanging any two substituents leads to a stereoisomer",
         "properties": {
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [],
         "title": "Stereocenter",
         "type": "object"
      },
      "Stereoisomer": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "Stereoisomer",
         "type": "object"
      },
      "SubatomicParticle": {
         "additionalProperties": false,
         "description": "A chemical entity below the granularity of an atom.",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "SubatomicParticle",
         "type": "object"
      },
      "SupramolecularPolymer": {
         "additionalProperties": false,
         "description": "polymeric arrays of monomeric units that are connected by reversible and highly directional secondary interactions\u2013that is, non-covalent bonds",
         "properties": {
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_repeat_unit": {
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "polymer_of": {
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "SupramolecularPolymer",
         "type": "object"
      },
      "TanimotoSimilarity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "left_molecule": {
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "right_molecule": {
               "type": "string"
            },
            "score": {
               "maximum": 1,
               "minimum": 1,
               "type": "number"
            }
         },
         "required": [],
         "title": "TanimotoSimilarity",
         "type": "object"
      },
      "UnchargedAtom": {
         "additionalProperties": false,
         "description": "An atom type that has no charge",
         "properties": {
            "atomic_number": {
               "description": "number of protons in an atom",
               "type": "integer"
            },
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "type": "integer"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "type": "string"
            },
            "id": {
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            },
            "symbol": {
               "description": "short symbol for chemical entity, e.g. K, C-16",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "UnchargedAtom",
         "type": "object"
      },
      "UnchargedMolecule": {
         "additionalProperties": false,
         "description": "A molecule that has no charge",
         "properties": {
            "elemental_charge": {
               "description": "number of protons minus number of electrons",
               "maximum": 0,
               "minimum": 0,
               "type": "integer"
            },
            "has_atom_occurrences": {
               "items": {
                  "$ref": "#/$defs/AtomOccurrence"
               },
               "type": "array"
            },
            "has_atoms": {
               "description": "Relation between a molecule and the atoms it contains. Note that this is a shortcut relation: for granular representations go via atom occurrences",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_bonds": {
               "description": "The set of all bonds connecting atoms in a molecule",
               "items": {
                  "$ref": "#/$defs/AtomicBond"
               },
               "minimum": 1,
               "type": "array"
            },
            "has_chemical_role": {
               "$ref": "#/$defs/ChemicalRole"
            },
            "has_part": {
               "description": "basic parthood relations",
               "minimum": 1,
               "type": "string"
            },
            "has_submolecules": {
               "description": "Relation between a molecule and the molecules it is made from.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "type": "string"
            },
            "inchi_atom_connections_sublayer": {
               "description": "The atoms in the chemical formula (except for hydrogens) are numbered in sequence; this sublayer describes which atoms are connected by bonds to which other ones.",
               "pattern": "^c.*",
               "type": "string"
            },
            "inchi_chemical_sublayer": {
               "description": "the main chemical formula",
               "pattern": "^[A-Z0-9\\.]+$",
               "type": "string"
            },
            "inchi_string": {
               "type": "string"
            },
            "is_organic": {
               "description": "An organic molecule is a molecule composed of organic atoms (at least carbon, hydrogen, and optionally oxygen, phosphorus, nitrogen, sulfur) [SIO]",
               "type": "boolean"
            },
            "is_radical": {
               "type": "boolean"
            },
            "name": {
               "description": "name of chemical entity. E.g. nickel, carbon-16",
               "type": "string"
            },
            "owl_subclass_of": {
               "$ref": "#/$defs/OwlClass",
               "description": "Holds between C and P if C owl:subClassOf P. Note that in this model, most classes are metaclasses (see 'owl class'), where these metaclasses may represent *groupings* or specific countable elements or species. We provide two different sub-properties of subclass of for two cases: (1) subtype_of, which connects grouping classes (e.g. alkane is_a hydrocarbon; alpha-amino-acid is_a amino-acid), (2) classified_by, which connects a specific element to a grouping class (e.g. methane is_a hydrocarbon; iron is_a metal; serine is_a amino-acid)"
            }
         },
         "required": [
            "id"
         ],
         "title": "UnchargedMolecule",
         "type": "object"
      },
      "WeaklyBonded": {
         "additionalProperties": false,
         "description": "Not covalently bonded",
         "properties": {},
         "required": [],
         "title": "WeaklyBonded",
         "type": "object"
      }
   },
   "$id": "https://w3id.org/chemrof",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "additionalProperties": true,
   "metamodel_version": "1.7.0",
   "properties": {},
   "required": [],
   "title": "chemrof",
   "type": "object",
   "version": "0.0.1"
}
